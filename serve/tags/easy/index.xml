<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>easy on shibak3n</title>
    <link>https://shibaken28.github.io/my-blog/tags/easy/</link>
    <description>Recent content in easy on shibak3n</description>
    <image>
      <url>https://shibaken28.github.io/my-blog/47</url>
      <link>https://shibaken28.github.io/my-blog/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 14 May 2022 14:49:48 +0900</lastBuildDate><atom:link href="https://shibaken28.github.io/my-blog/tags/easy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TSG lIVE! 8 CTFに参加しました</title>
      <link>https://shibaken28.github.io/my-blog/post/ctf/crypto/tsg8/all/</link>
      <pubDate>Sat, 14 May 2022 14:49:48 +0900</pubDate>
      
      <guid>https://shibaken28.github.io/my-blog/post/ctf/crypto/tsg8/all/</guid>
      <description>はじめに TSG lIVE! 8 CTFにチーム参加しました． crypto問を3問中2つ解いたのでwriteupを書きます．
Forgetful RSA flagの上位$i$bitを$f_i$と表すことにする．また，$f_i^e \mod n =c_i$とする． 出力された配列cを見ると，小さい$i$について$f_i^e&amp;lt;n$であり，$f_i^e = c_i$予想できる．
(f_4)**e = 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (f_3)**e = 43180842775472231269317593140019978555800018221814069251185173508429590158121352898575375173614411328027364697307483179849754947341597334682650188852903738734312355518341064453125 (f_2)**e = 231584178474632390847141970017375815706539969331281128078915168015826259279872 (f_1)**e = 1 例えば，次のようにプログラムを掛けば
&amp;gt;&amp;gt;&amp;gt; from gmpy2 import iroot &amp;gt;&amp;gt;&amp;gt; e = 0x101 &amp;gt;&amp;gt;&amp;gt; c = 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 &amp;gt;&amp;gt;&amp;gt; iroot(c,e) (mpz(10), True) &amp;gt;&amp;gt;&amp;gt; flagの上位4bitが0b1010であることがわかる．
次に，最大公約数をうまく使うことで$n$を求める． $f_5^e n=c_5\mod n$より，$f_5^e - c_5 = 0 \mod n$で，$f_5^e -c_5$は$n$の倍数である． 同様に，$f_6^e - c_6$も$n$の倍数であるから，これらの最大公約数をとることで$n$が得られる． $f_5$，$f_6$として考えられる値はたかだか$4$通りであるため，全て試せばいい．
from Crypto.Util.number import GCD c.reverse() a0 = pow(0b10100,e) a1 = pow(0b10101,e) a00 = pow(0b101000,e) a01 = pow(0b101001,e) a10 = pow(0b101010,e) a11 = pow(0b101011,e) print(GCD(a0-c[5],a00-c[6])) print(GCD(a0-c[5],a01-c[6])) print(GCD(a1-c[5],a10-c[6])) print(GCD(a1-c[5],a11-c[6])) 結果は以下の通りである．</description>
    </item>
    
    <item>
      <title>CrewCTF 2022 - The Huge E</title>
      <link>https://shibaken28.github.io/my-blog/post/ctf/crypto/crew/thehugee/</link>
      <pubDate>Mon, 09 May 2022 12:59:30 +0900</pubDate>
      
      <guid>https://shibaken28.github.io/my-blog/post/ctf/crypto/crew/thehugee/</guid>
      <description>問題 ctfTimeの問題ページ out.txtは次のようになっています．
p = 127557933868274766492781168166651795645253551106939814103375361345423596703884421796150924794852741931334746816404778765897684777811408386179315837751682393250322682273488477810275794941270780027115435485813413822503016999058941190903932883823 e1 = 219560036291700924162367491740680392841 e2 = 325829142086458078752836113369745585569 e3 = 237262361171684477270779152881433264701 c = 962976093858853504877937799237367527464560456536071770645193845048591657714868645727169308285896910567283470660044952959089092802768837038911347652160892917850466319249036343642773207046774240176141525105555149800395040339351956120433647613 平文を$m$，ある素数を$p$とすると，$m^e \bmod p = c$として暗号文$c$を求めています．ただし，$e = {e_1}^{{e_2}^{e_3}}$です． $e_1,e_2,e_3$が与えられているので，$e$を求めれば $d = e^{-1} \pmod{\phi(p)} $として$c^d \pmod p$で平文が求まります．
しかし，$e$を実際に計算しようとすると無限時間かかります． どう計算するかが問題です．
解答 $e$の値は$\bmod {\phi(p)}$の世界で考えても問題ありません． ${e_1}^{{e_2}^{e_3}} \pmod{\phi(p)}$の値を求めていきます． オイラーの定理より，次が成り立ちます． $${e_1}^{\phi(\phi(p))} = 1 \pmod{\phi(p)} $$ $p$は素数であるので，$\phi(p)=p-1$です(フェルマーの小定理)．よって，次のように書き換えられます． $${e_1}^{\phi(p-1)} = 1 \pmod{p-1}$$
整数$k$と$l$を使って，${e_2}^{e_3} = \phi(p-1)k+l$と表されたとします．これは，${e_2}^{e_3}$を$\phi(p-1)$で割ったときに商が$k$，余りが$l$になったことを表しています． すると， $${e_1}^{{e_2}^{e_3}} = {e_1}^{ \phi(p-1)k+l} = ({e_1}^{\phi(p-1)})^k\cdot {e_1}^l = 1^k \cdot {e_1}^l = {e_1}^l \pmod{p-1}$$
と計算できます．つまり，$l={e_2}^{e_3} \pmod{\phi(p-1)}$として，${e_1}^l \pmod{p-1}$を計算すれば$e$が求まります．</description>
    </item>
    
  </channel>
</rss>
