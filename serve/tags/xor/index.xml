<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>xor on shibak3n</title>
    <link>https://shibaken28.github.io/my-blog/tags/xor/</link>
    <description>Recent content in xor on shibak3n</description>
    <image>
      <url>https://shibaken28.github.io/my-blog/47</url>
      <link>https://shibaken28.github.io/my-blog/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 12 May 2022 10:46:41 +0900</lastBuildDate><atom:link href="https://shibaken28.github.io/my-blog/tags/xor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>picoGym - Easy Peasy</title>
      <link>https://shibaken28.github.io/my-blog/post/ctf/crypto/pico/easy-peasy/</link>
      <pubDate>Thu, 12 May 2022 10:46:41 +0900</pubDate>
      
      <guid>https://shibaken28.github.io/my-blog/post/ctf/crypto/pico/easy-peasy/</guid>
      <description>概要 A one-time pad is unbreakable, but can you manage to recover the flag? (Wrap with picoCTF{}) nc mercury.picoctf.net 64260 otp.py
#!/usr/bin/python3 -u import os.path  KEY_FILE = &amp;#34;key&amp;#34; KEY_LEN = 50000 FLAG_FILE = &amp;#34;flag&amp;#34;   def startup(key_location): 	flag = open(FLAG_FILE).read() 	kf = open(KEY_FILE, &amp;#34;rb&amp;#34;).read()  	start = key_location 	stop = key_location + len(flag)  	key = kf[start:stop] 	key_location = stop  	result = list(map(lambda p, k: &amp;#34;{:02x}&amp;#34;.</description>
    </item>
    
  </channel>
</rss>
